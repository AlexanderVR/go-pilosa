// Code generated by protoc-gen-go.
// source: gopilosa_pbuf/public.proto
// DO NOT EDIT!

/*
Package gopilosa_pbuf is a generated protocol buffer package.

It is generated from these files:
	gopilosa_pbuf/public.proto

It has these top-level messages:
	Bitmap
	Pair
	SumCount
	Bit
	ColumnAttrSet
	Attr
	AttrMap
	QueryRequest
	QueryResponse
	QueryResult
	ImportRequest
	ImportKRequest
	ImportValueRequest
*/
package gopilosa_pbuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bitmap struct {
	Bits  []uint64 `protobuf:"varint,1,rep,packed,name=Bits" json:"Bits,omitempty"`
	Keys  []string `protobuf:"bytes,3,rep,name=Keys" json:"Keys,omitempty"`
	Attrs []*Attr  `protobuf:"bytes,2,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *Bitmap) Reset()                    { *m = Bitmap{} }
func (m *Bitmap) String() string            { return proto.CompactTextString(m) }
func (*Bitmap) ProtoMessage()               {}
func (*Bitmap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Bitmap) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type Pair struct {
	ID    uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Key   string `protobuf:"bytes,3,opt,name=Key" json:"Key,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=Count" json:"Count,omitempty"`
}

func (m *Pair) Reset()                    { *m = Pair{} }
func (m *Pair) String() string            { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()               {}
func (*Pair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SumCount struct {
	Sum   int64 `protobuf:"varint,1,opt,name=Sum" json:"Sum,omitempty"`
	Count int64 `protobuf:"varint,2,opt,name=Count" json:"Count,omitempty"`
}

func (m *SumCount) Reset()                    { *m = SumCount{} }
func (m *SumCount) String() string            { return proto.CompactTextString(m) }
func (*SumCount) ProtoMessage()               {}
func (*SumCount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Bit struct {
	RowID     uint64 `protobuf:"varint,1,opt,name=RowID" json:"RowID,omitempty"`
	ColumnID  uint64 `protobuf:"varint,2,opt,name=ColumnID" json:"ColumnID,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=Timestamp" json:"Timestamp,omitempty"`
}

func (m *Bit) Reset()                    { *m = Bit{} }
func (m *Bit) String() string            { return proto.CompactTextString(m) }
func (*Bit) ProtoMessage()               {}
func (*Bit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ColumnAttrSet struct {
	ID    uint64  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Key   string  `protobuf:"bytes,3,opt,name=Key" json:"Key,omitempty"`
	Attrs []*Attr `protobuf:"bytes,2,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *ColumnAttrSet) Reset()                    { *m = ColumnAttrSet{} }
func (m *ColumnAttrSet) String() string            { return proto.CompactTextString(m) }
func (*ColumnAttrSet) ProtoMessage()               {}
func (*ColumnAttrSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ColumnAttrSet) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type Attr struct {
	Key         string  `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	Type        uint64  `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	StringValue string  `protobuf:"bytes,3,opt,name=StringValue" json:"StringValue,omitempty"`
	IntValue    int64   `protobuf:"varint,4,opt,name=IntValue" json:"IntValue,omitempty"`
	BoolValue   bool    `protobuf:"varint,5,opt,name=BoolValue" json:"BoolValue,omitempty"`
	FloatValue  float64 `protobuf:"fixed64,6,opt,name=FloatValue" json:"FloatValue,omitempty"`
}

func (m *Attr) Reset()                    { *m = Attr{} }
func (m *Attr) String() string            { return proto.CompactTextString(m) }
func (*Attr) ProtoMessage()               {}
func (*Attr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type AttrMap struct {
	Attrs []*Attr `protobuf:"bytes,1,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *AttrMap) Reset()                    { *m = AttrMap{} }
func (m *AttrMap) String() string            { return proto.CompactTextString(m) }
func (*AttrMap) ProtoMessage()               {}
func (*AttrMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AttrMap) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type QueryRequest struct {
	Query        string   `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
	Slices       []uint64 `protobuf:"varint,2,rep,packed,name=Slices" json:"Slices,omitempty"`
	ColumnAttrs  bool     `protobuf:"varint,3,opt,name=ColumnAttrs" json:"ColumnAttrs,omitempty"`
	Remote       bool     `protobuf:"varint,5,opt,name=Remote" json:"Remote,omitempty"`
	ExcludeAttrs bool     `protobuf:"varint,6,opt,name=ExcludeAttrs" json:"ExcludeAttrs,omitempty"`
	ExcludeBits  bool     `protobuf:"varint,7,opt,name=ExcludeBits" json:"ExcludeBits,omitempty"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type QueryResponse struct {
	Err            string           `protobuf:"bytes,1,opt,name=Err" json:"Err,omitempty"`
	Results        []*QueryResult   `protobuf:"bytes,2,rep,name=Results" json:"Results,omitempty"`
	ColumnAttrSets []*ColumnAttrSet `protobuf:"bytes,3,rep,name=ColumnAttrSets" json:"ColumnAttrSets,omitempty"`
}

func (m *QueryResponse) Reset()                    { *m = QueryResponse{} }
func (m *QueryResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()               {}
func (*QueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *QueryResponse) GetResults() []*QueryResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *QueryResponse) GetColumnAttrSets() []*ColumnAttrSet {
	if m != nil {
		return m.ColumnAttrSets
	}
	return nil
}

type QueryResult struct {
	Bitmap   *Bitmap   `protobuf:"bytes,1,opt,name=Bitmap" json:"Bitmap,omitempty"`
	N        uint64    `protobuf:"varint,2,opt,name=N" json:"N,omitempty"`
	Pairs    []*Pair   `protobuf:"bytes,3,rep,name=Pairs" json:"Pairs,omitempty"`
	SumCount *SumCount `protobuf:"bytes,5,opt,name=SumCount" json:"SumCount,omitempty"`
	Changed  bool      `protobuf:"varint,4,opt,name=Changed" json:"Changed,omitempty"`
}

func (m *QueryResult) Reset()                    { *m = QueryResult{} }
func (m *QueryResult) String() string            { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()               {}
func (*QueryResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *QueryResult) GetBitmap() *Bitmap {
	if m != nil {
		return m.Bitmap
	}
	return nil
}

func (m *QueryResult) GetPairs() []*Pair {
	if m != nil {
		return m.Pairs
	}
	return nil
}

func (m *QueryResult) GetSumCount() *SumCount {
	if m != nil {
		return m.SumCount
	}
	return nil
}

type ImportRequest struct {
	Index      string   `protobuf:"bytes,1,opt,name=Index" json:"Index,omitempty"`
	Frame      string   `protobuf:"bytes,2,opt,name=Frame" json:"Frame,omitempty"`
	Slice      uint64   `protobuf:"varint,3,opt,name=Slice" json:"Slice,omitempty"`
	RowIDs     []uint64 `protobuf:"varint,4,rep,packed,name=RowIDs" json:"RowIDs,omitempty"`
	ColumnIDs  []uint64 `protobuf:"varint,5,rep,packed,name=ColumnIDs" json:"ColumnIDs,omitempty"`
	Timestamps []int64  `protobuf:"varint,6,rep,packed,name=Timestamps" json:"Timestamps,omitempty"`
}

func (m *ImportRequest) Reset()                    { *m = ImportRequest{} }
func (m *ImportRequest) String() string            { return proto.CompactTextString(m) }
func (*ImportRequest) ProtoMessage()               {}
func (*ImportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type ImportKRequest struct {
	Index      string   `protobuf:"bytes,1,opt,name=Index" json:"Index,omitempty"`
	Frame      string   `protobuf:"bytes,2,opt,name=Frame" json:"Frame,omitempty"`
	RowKeys    []string `protobuf:"bytes,3,rep,name=RowKeys" json:"RowKeys,omitempty"`
	ColumnKeys []string `protobuf:"bytes,4,rep,name=ColumnKeys" json:"ColumnKeys,omitempty"`
	Timestamps []int64  `protobuf:"varint,5,rep,packed,name=Timestamps" json:"Timestamps,omitempty"`
}

func (m *ImportKRequest) Reset()                    { *m = ImportKRequest{} }
func (m *ImportKRequest) String() string            { return proto.CompactTextString(m) }
func (*ImportKRequest) ProtoMessage()               {}
func (*ImportKRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type ImportValueRequest struct {
	Index     string   `protobuf:"bytes,1,opt,name=Index" json:"Index,omitempty"`
	Frame     string   `protobuf:"bytes,2,opt,name=Frame" json:"Frame,omitempty"`
	Slice     uint64   `protobuf:"varint,3,opt,name=Slice" json:"Slice,omitempty"`
	Field     string   `protobuf:"bytes,4,opt,name=Field" json:"Field,omitempty"`
	ColumnIDs []uint64 `protobuf:"varint,5,rep,packed,name=ColumnIDs" json:"ColumnIDs,omitempty"`
	Values    []int64  `protobuf:"varint,6,rep,packed,name=Values" json:"Values,omitempty"`
}

func (m *ImportValueRequest) Reset()                    { *m = ImportValueRequest{} }
func (m *ImportValueRequest) String() string            { return proto.CompactTextString(m) }
func (*ImportValueRequest) ProtoMessage()               {}
func (*ImportValueRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func init() {
	proto.RegisterType((*Bitmap)(nil), "gopilosa_pbuf.Bitmap")
	proto.RegisterType((*Pair)(nil), "gopilosa_pbuf.Pair")
	proto.RegisterType((*SumCount)(nil), "gopilosa_pbuf.SumCount")
	proto.RegisterType((*Bit)(nil), "gopilosa_pbuf.Bit")
	proto.RegisterType((*ColumnAttrSet)(nil), "gopilosa_pbuf.ColumnAttrSet")
	proto.RegisterType((*Attr)(nil), "gopilosa_pbuf.Attr")
	proto.RegisterType((*AttrMap)(nil), "gopilosa_pbuf.AttrMap")
	proto.RegisterType((*QueryRequest)(nil), "gopilosa_pbuf.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "gopilosa_pbuf.QueryResponse")
	proto.RegisterType((*QueryResult)(nil), "gopilosa_pbuf.QueryResult")
	proto.RegisterType((*ImportRequest)(nil), "gopilosa_pbuf.ImportRequest")
	proto.RegisterType((*ImportKRequest)(nil), "gopilosa_pbuf.ImportKRequest")
	proto.RegisterType((*ImportValueRequest)(nil), "gopilosa_pbuf.ImportValueRequest")
}

func init() { proto.RegisterFile("gopilosa_pbuf/public.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 694 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x55, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0xd6, 0xc4, 0xce, 0xed, 0xa4, 0xa9, 0x7e, 0xcd, 0x0f, 0xc5, 0xaa, 0x2a, 0x64, 0x79, 0x65,
	0x16, 0x14, 0x29, 0xed, 0x1a, 0x89, 0x34, 0xad, 0x14, 0x55, 0x54, 0x30, 0x29, 0x6c, 0x40, 0x42,
	0x6e, 0x3b, 0x14, 0x4b, 0x76, 0xc6, 0xd8, 0x63, 0xb5, 0x79, 0x11, 0x76, 0x6c, 0xd8, 0xc0, 0x43,
	0xb0, 0xe4, 0xc1, 0xd0, 0x39, 0xe3, 0x89, 0x1d, 0xb3, 0x28, 0x20, 0x76, 0xf3, 0x9d, 0x9b, 0xbf,
	0x73, 0xf9, 0x12, 0xd8, 0xbd, 0x56, 0x59, 0x9c, 0xa8, 0x22, 0x7a, 0x97, 0x5d, 0x94, 0xef, 0x9f,
	0x64, 0xe5, 0x45, 0x12, 0x5f, 0xee, 0x67, 0xb9, 0xd2, 0x8a, 0x8f, 0x37, 0x7c, 0xc1, 0x1b, 0xe8,
	0x4d, 0x63, 0x9d, 0x46, 0x19, 0xe7, 0xe0, 0x4e, 0x63, 0x5d, 0x78, 0xcc, 0x77, 0x42, 0x57, 0xd0,
	0x1b, 0x6d, 0xa7, 0x72, 0x55, 0x78, 0x8e, 0xef, 0x84, 0x43, 0x41, 0x6f, 0xfe, 0x08, 0xba, 0xcf,
	0xb4, 0xce, 0x0b, 0xaf, 0xe3, 0x3b, 0xe1, 0x68, 0xf2, 0xff, 0xfe, 0x46, 0xc1, 0x7d, 0xf4, 0x09,
	0x13, 0x11, 0x3c, 0x05, 0xf7, 0x45, 0x14, 0xe7, 0x7c, 0x1b, 0x3a, 0xf3, 0x99, 0xc7, 0x7c, 0x16,
	0xba, 0xa2, 0x33, 0x9f, 0xf1, 0xff, 0xc0, 0x39, 0x95, 0x2b, 0xcf, 0xf1, 0x59, 0x38, 0x14, 0xf8,
	0xe4, 0xf7, 0xa0, 0x7b, 0xa4, 0xca, 0xa5, 0xf6, 0x3a, 0x14, 0x64, 0x40, 0x30, 0x81, 0xc1, 0xa2,
	0x4c, 0xe9, 0x8d, 0x39, 0x8b, 0x32, 0xa5, 0x22, 0x8e, 0xc0, 0xe7, 0x66, 0x8e, 0x63, 0x73, 0x5e,
	0x81, 0x33, 0x8d, 0x35, 0x3a, 0x85, 0xba, 0x59, 0x7f, 0xd5, 0x00, 0xbe, 0x0b, 0x83, 0x23, 0x95,
	0x94, 0xe9, 0x72, 0x3e, 0xab, 0xbe, 0xb4, 0xc6, 0x7c, 0x0f, 0x86, 0xe7, 0x71, 0x2a, 0x0b, 0x1d,
	0xa5, 0x19, 0x51, 0x73, 0x44, 0x6d, 0x08, 0xde, 0xc2, 0xd8, 0x44, 0x62, 0x67, 0x0b, 0xa9, 0x7f,
	0xa3, 0xa7, 0x3f, 0x18, 0xd4, 0x37, 0x06, 0x2e, 0xbe, 0x6c, 0x15, 0x56, 0x57, 0xe1, 0xe0, 0x9e,
	0xaf, 0x32, 0x59, 0xd1, 0xa5, 0x37, 0xf7, 0x61, 0xb4, 0xd0, 0x79, 0xbc, 0xbc, 0x7e, 0x1d, 0x25,
	0xa5, 0xac, 0xbe, 0xd9, 0x34, 0x61, 0xa3, 0xf3, 0xa5, 0x36, 0x6e, 0x97, 0x7a, 0x59, 0x63, 0x6c,
	0x74, 0xaa, 0x54, 0x62, 0x9c, 0x5d, 0x9f, 0x85, 0x03, 0x51, 0x1b, 0xf8, 0x43, 0x80, 0x93, 0x44,
	0x45, 0x55, 0x6e, 0xcf, 0x67, 0x21, 0x13, 0x0d, 0x4b, 0x70, 0x08, 0x7d, 0x64, 0xfa, 0x3c, 0xca,
	0xea, 0x06, 0xd9, 0x9d, 0x0d, 0x7e, 0x67, 0xb0, 0xf5, 0xb2, 0x94, 0xf9, 0x4a, 0xc8, 0x8f, 0xa5,
	0x2c, 0x68, 0x3f, 0x84, 0xab, 0x56, 0x0d, 0xe0, 0x3b, 0xd0, 0x5b, 0x24, 0xf1, 0xa5, 0x34, 0x33,
	0x73, 0x45, 0x85, 0xb0, 0xe1, 0x7a, 0xfa, 0x05, 0x35, 0x3c, 0x10, 0x4d, 0x13, 0x66, 0x0a, 0x99,
	0x2a, 0x6d, 0x3b, 0xaa, 0x10, 0x0f, 0x60, 0xeb, 0xf8, 0xf6, 0x32, 0x29, 0xaf, 0xa4, 0x49, 0xed,
	0x91, 0x77, 0xc3, 0x86, 0xd5, 0x2b, 0x4c, 0x02, 0xe8, 0x9b, 0xea, 0x0d, 0x53, 0xf0, 0x99, 0xc1,
	0xb8, 0xa2, 0x5f, 0x64, 0x6a, 0x59, 0x48, 0x5c, 0xd4, 0x71, 0x9e, 0xdb, 0x45, 0x1d, 0xe7, 0x39,
	0x3f, 0x84, 0xbe, 0x90, 0x45, 0x99, 0x68, 0xbb, 0xf0, 0xdd, 0xd6, 0x3c, 0x6c, 0x81, 0x32, 0xd1,
	0xc2, 0x86, 0xf2, 0x19, 0x6c, 0x6f, 0xdc, 0x95, 0xd1, 0xda, 0x68, 0xb2, 0xd7, 0x4a, 0xde, 0x08,
	0x12, 0xad, 0x9c, 0xe0, 0x07, 0x83, 0x51, 0xa3, 0x3c, 0x7f, 0x6c, 0x55, 0x4d, 0x04, 0x47, 0x93,
	0xfb, 0xad, 0x6a, 0xc6, 0x29, 0xac, 0xf4, 0xb7, 0x80, 0x9d, 0x55, 0x07, 0xc6, 0xce, 0x70, 0xad,
	0xa8, 0x5a, 0xcb, 0xa4, 0xbd, 0x56, 0xf4, 0x09, 0x13, 0xc1, 0x0f, 0x6a, 0x81, 0xd2, 0xdc, 0x47,
	0x93, 0x07, 0xad, 0x68, 0xeb, 0x16, 0xb5, 0x92, 0x3d, 0xe8, 0x1f, 0x7d, 0x88, 0x96, 0xd7, 0xf2,
	0x8a, 0x4e, 0x73, 0x20, 0x2c, 0x0c, 0xbe, 0x32, 0x18, 0xcf, 0xd3, 0x4c, 0xe5, 0xba, 0x71, 0x26,
	0xf3, 0xe5, 0x95, 0xbc, 0xb5, 0x67, 0x42, 0x00, 0xad, 0x27, 0x79, 0x94, 0x1a, 0x51, 0x0c, 0x85,
	0x01, 0x68, 0xa5, 0x73, 0xa1, 0xf3, 0x70, 0x85, 0x01, 0x74, 0x18, 0xa8, 0xfd, 0xc2, 0x73, 0xcd,
	0x49, 0x19, 0x84, 0x2a, 0xb0, 0xd2, 0x2f, 0xbc, 0x2e, 0xb9, 0x6a, 0x03, 0xaa, 0x60, 0xad, 0x7d,
	0x3c, 0x1a, 0x27, 0x74, 0x44, 0xc3, 0x12, 0x7c, 0x62, 0xb0, 0x6d, 0x98, 0x9e, 0xfe, 0x0d, 0x55,
	0x0f, 0xfa, 0x42, 0xdd, 0x34, 0x7e, 0x5a, 0x2d, 0xc4, 0x0f, 0x1b, 0x16, 0xe4, 0x74, 0xc9, 0xd9,
	0xb0, 0xb4, 0x88, 0x75, 0x7f, 0x21, 0xf6, 0x85, 0x01, 0x37, 0xc4, 0x48, 0xae, 0xff, 0x6e, 0x8e,
	0x18, 0x1b, 0xcb, 0xc4, 0xec, 0x0c, 0x63, 0x11, 0xdc, 0x31, 0xc5, 0x1d, 0xe8, 0x11, 0x0b, 0x3b,
	0xc1, 0x0a, 0x5d, 0xf4, 0xe8, 0xaf, 0xe8, 0xe0, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x3e,
	0xd5, 0xfc, 0xa8, 0x06, 0x00, 0x00,
}
