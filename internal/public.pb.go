// Code generated by protoc-gen-go.
// source: internal/public.proto
// DO NOT EDIT!

/*
Package internal is a generated protocol buffer package.

It is generated from these files:
	internal/public.proto

It has these top-level messages:
	Bitmap
	Pair
	Bit
	Profile
	Attr
	AttrMap
	QueryRequest
	QueryResponse
	QueryResult
	ImportRequest
*/
package internal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bitmap struct {
	Bits  []uint64 `protobuf:"varint,1,rep,packed,name=Bits" json:"Bits,omitempty"`
	Attrs []*Attr  `protobuf:"bytes,2,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *Bitmap) Reset()                    { *m = Bitmap{} }
func (m *Bitmap) String() string            { return proto.CompactTextString(m) }
func (*Bitmap) ProtoMessage()               {}
func (*Bitmap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Bitmap) GetBits() []uint64 {
	if m != nil {
		return m.Bits
	}
	return nil
}

func (m *Bitmap) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type Pair struct {
	Key   uint64 `protobuf:"varint,1,opt,name=Key" json:"Key,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=Count" json:"Count,omitempty"`
}

func (m *Pair) Reset()                    { *m = Pair{} }
func (m *Pair) String() string            { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()               {}
func (*Pair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Pair) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *Pair) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Bit struct {
	BitmapID  uint64 `protobuf:"varint,1,opt,name=BitmapID" json:"BitmapID,omitempty"`
	ProfileID uint64 `protobuf:"varint,2,opt,name=ProfileID" json:"ProfileID,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=Timestamp" json:"Timestamp,omitempty"`
}

func (m *Bit) Reset()                    { *m = Bit{} }
func (m *Bit) String() string            { return proto.CompactTextString(m) }
func (*Bit) ProtoMessage()               {}
func (*Bit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Bit) GetBitmapID() uint64 {
	if m != nil {
		return m.BitmapID
	}
	return 0
}

func (m *Bit) GetProfileID() uint64 {
	if m != nil {
		return m.ProfileID
	}
	return 0
}

func (m *Bit) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Profile struct {
	ID    uint64  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Attrs []*Attr `protobuf:"bytes,2,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Profile) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Profile) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type Attr struct {
	Key         string  `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	Type        uint64  `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	StringValue string  `protobuf:"bytes,3,opt,name=StringValue" json:"StringValue,omitempty"`
	IntValue    int64   `protobuf:"varint,4,opt,name=IntValue" json:"IntValue,omitempty"`
	BoolValue   bool    `protobuf:"varint,5,opt,name=BoolValue" json:"BoolValue,omitempty"`
	FloatValue  float64 `protobuf:"fixed64,6,opt,name=FloatValue" json:"FloatValue,omitempty"`
}

func (m *Attr) Reset()                    { *m = Attr{} }
func (m *Attr) String() string            { return proto.CompactTextString(m) }
func (*Attr) ProtoMessage()               {}
func (*Attr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Attr) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Attr) GetType() uint64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Attr) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Attr) GetIntValue() int64 {
	if m != nil {
		return m.IntValue
	}
	return 0
}

func (m *Attr) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

func (m *Attr) GetFloatValue() float64 {
	if m != nil {
		return m.FloatValue
	}
	return 0
}

type AttrMap struct {
	Attrs []*Attr `protobuf:"bytes,1,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *AttrMap) Reset()                    { *m = AttrMap{} }
func (m *AttrMap) String() string            { return proto.CompactTextString(m) }
func (*AttrMap) ProtoMessage()               {}
func (*AttrMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AttrMap) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type QueryRequest struct {
	Query    string   `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
	Slices   []uint64 `protobuf:"varint,2,rep,packed,name=Slices" json:"Slices,omitempty"`
	Profiles bool     `protobuf:"varint,3,opt,name=Profiles" json:"Profiles,omitempty"`
	Quantum  string   `protobuf:"bytes,4,opt,name=Quantum" json:"Quantum,omitempty"`
	Remote   bool     `protobuf:"varint,5,opt,name=Remote" json:"Remote,omitempty"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QueryRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *QueryRequest) GetSlices() []uint64 {
	if m != nil {
		return m.Slices
	}
	return nil
}

func (m *QueryRequest) GetProfiles() bool {
	if m != nil {
		return m.Profiles
	}
	return false
}

func (m *QueryRequest) GetQuantum() string {
	if m != nil {
		return m.Quantum
	}
	return ""
}

func (m *QueryRequest) GetRemote() bool {
	if m != nil {
		return m.Remote
	}
	return false
}

type QueryResponse struct {
	Err      string         `protobuf:"bytes,1,opt,name=Err" json:"Err,omitempty"`
	Results  []*QueryResult `protobuf:"bytes,2,rep,name=Results" json:"Results,omitempty"`
	Profiles []*Profile     `protobuf:"bytes,3,rep,name=Profiles" json:"Profiles,omitempty"`
}

func (m *QueryResponse) Reset()                    { *m = QueryResponse{} }
func (m *QueryResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()               {}
func (*QueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *QueryResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *QueryResponse) GetResults() []*QueryResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *QueryResponse) GetProfiles() []*Profile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

type QueryResult struct {
	Bitmap  *Bitmap `protobuf:"bytes,1,opt,name=Bitmap" json:"Bitmap,omitempty"`
	N       uint64  `protobuf:"varint,2,opt,name=N" json:"N,omitempty"`
	Pairs   []*Pair `protobuf:"bytes,3,rep,name=Pairs" json:"Pairs,omitempty"`
	Changed bool    `protobuf:"varint,4,opt,name=Changed" json:"Changed,omitempty"`
}

func (m *QueryResult) Reset()                    { *m = QueryResult{} }
func (m *QueryResult) String() string            { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()               {}
func (*QueryResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *QueryResult) GetBitmap() *Bitmap {
	if m != nil {
		return m.Bitmap
	}
	return nil
}

func (m *QueryResult) GetN() uint64 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *QueryResult) GetPairs() []*Pair {
	if m != nil {
		return m.Pairs
	}
	return nil
}

func (m *QueryResult) GetChanged() bool {
	if m != nil {
		return m.Changed
	}
	return false
}

type ImportRequest struct {
	DB         string   `protobuf:"bytes,1,opt,name=DB" json:"DB,omitempty"`
	Frame      string   `protobuf:"bytes,2,opt,name=Frame" json:"Frame,omitempty"`
	Slice      uint64   `protobuf:"varint,3,opt,name=Slice" json:"Slice,omitempty"`
	BitmapIDs  []uint64 `protobuf:"varint,4,rep,packed,name=BitmapIDs" json:"BitmapIDs,omitempty"`
	ProfileIDs []uint64 `protobuf:"varint,5,rep,packed,name=ProfileIDs" json:"ProfileIDs,omitempty"`
	Timestamps []int64  `protobuf:"varint,6,rep,packed,name=Timestamps" json:"Timestamps,omitempty"`
}

func (m *ImportRequest) Reset()                    { *m = ImportRequest{} }
func (m *ImportRequest) String() string            { return proto.CompactTextString(m) }
func (*ImportRequest) ProtoMessage()               {}
func (*ImportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ImportRequest) GetDB() string {
	if m != nil {
		return m.DB
	}
	return ""
}

func (m *ImportRequest) GetFrame() string {
	if m != nil {
		return m.Frame
	}
	return ""
}

func (m *ImportRequest) GetSlice() uint64 {
	if m != nil {
		return m.Slice
	}
	return 0
}

func (m *ImportRequest) GetBitmapIDs() []uint64 {
	if m != nil {
		return m.BitmapIDs
	}
	return nil
}

func (m *ImportRequest) GetProfileIDs() []uint64 {
	if m != nil {
		return m.ProfileIDs
	}
	return nil
}

func (m *ImportRequest) GetTimestamps() []int64 {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func init() {
	proto.RegisterType((*Bitmap)(nil), "internal.Bitmap")
	proto.RegisterType((*Pair)(nil), "internal.Pair")
	proto.RegisterType((*Bit)(nil), "internal.Bit")
	proto.RegisterType((*Profile)(nil), "internal.Profile")
	proto.RegisterType((*Attr)(nil), "internal.Attr")
	proto.RegisterType((*AttrMap)(nil), "internal.AttrMap")
	proto.RegisterType((*QueryRequest)(nil), "internal.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "internal.QueryResponse")
	proto.RegisterType((*QueryResult)(nil), "internal.QueryResult")
	proto.RegisterType((*ImportRequest)(nil), "internal.ImportRequest")
}

func init() { proto.RegisterFile("internal/public.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 548 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x95, 0x93, 0xec, 0xd7, 0x6c, 0xbb, 0x2a, 0x16, 0x45, 0x11, 0x42, 0x28, 0x8a, 0x38, 0xe4,
	0xc2, 0xae, 0x54, 0x7e, 0x00, 0x22, 0xdd, 0x56, 0x8a, 0x10, 0x55, 0xeb, 0x56, 0xdc, 0x38, 0xa4,
	0xc5, 0x94, 0x48, 0x49, 0x1c, 0x6c, 0xe7, 0xb0, 0x47, 0x0e, 0x5c, 0xf8, 0x25, 0xf0, 0x2f, 0xd1,
	0xf8, 0x23, 0x09, 0x17, 0xc4, 0xcd, 0xef, 0x4d, 0xc6, 0x9e, 0xf7, 0x66, 0x26, 0x70, 0x5a, 0xb5,
	0x9a, 0xcb, 0xb6, 0xac, 0x77, 0x5d, 0x7f, 0x5f, 0x57, 0x0f, 0xdb, 0x4e, 0x0a, 0x2d, 0xe8, 0xd2,
	0xd3, 0x69, 0x0e, 0xf3, 0xbc, 0xd2, 0x4d, 0xd9, 0x51, 0x0a, 0x51, 0x5e, 0x69, 0x15, 0x93, 0x24,
	0xcc, 0x22, 0x66, 0xce, 0xf4, 0x15, 0xcc, 0xde, 0x69, 0x2d, 0x55, 0x1c, 0x24, 0x61, 0xb6, 0x3e,
	0xdb, 0x6c, 0x7d, 0xde, 0x16, 0x69, 0x66, 0x83, 0xe9, 0x16, 0xa2, 0xeb, 0xb2, 0x92, 0xf4, 0x04,
	0xc2, 0xf7, 0xfc, 0x10, 0x93, 0x84, 0x64, 0x11, 0xc3, 0x23, 0x7d, 0x0a, 0xb3, 0x73, 0xd1, 0xb7,
	0x3a, 0x0e, 0x0c, 0x67, 0x41, 0xfa, 0x09, 0xc2, 0xbc, 0xd2, 0xf4, 0x39, 0x2c, 0xed, 0xd3, 0xc5,
	0xde, 0xe5, 0x0c, 0x98, 0xbe, 0x80, 0xd5, 0xb5, 0x14, 0x5f, 0xaa, 0x9a, 0x17, 0x7b, 0x97, 0x3c,
	0x12, 0x18, 0xbd, 0xab, 0x1a, 0xae, 0x74, 0xd9, 0x74, 0x71, 0x98, 0x90, 0x2c, 0x64, 0x23, 0x91,
	0xbe, 0x85, 0x85, 0xfb, 0x94, 0x6e, 0x20, 0x18, 0x2e, 0x0f, 0x8a, 0xfd, 0x7f, 0xea, 0xf9, 0x45,
	0x20, 0xc2, 0xd3, 0x54, 0xd0, 0xca, 0x0a, 0xa2, 0x10, 0xdd, 0x1d, 0x3a, 0xee, 0x4a, 0x32, 0x67,
	0x9a, 0xc0, 0xfa, 0x56, 0xcb, 0xaa, 0x7d, 0xfc, 0x58, 0xd6, 0x3d, 0x37, 0xf5, 0xac, 0xd8, 0x94,
	0x42, 0xa5, 0x45, 0xab, 0x6d, 0x38, 0x32, 0xe5, 0x0e, 0x18, 0xb5, 0xe4, 0x42, 0xd4, 0x36, 0x38,
	0x4b, 0x48, 0xb6, 0x64, 0x23, 0x41, 0x5f, 0x02, 0x5c, 0xd6, 0xa2, 0x74, 0xb9, 0xf3, 0x84, 0x64,
	0x84, 0x4d, 0x98, 0x74, 0x07, 0x0b, 0xac, 0xf4, 0x43, 0xd9, 0x8d, 0xda, 0xc8, 0xbf, 0xb4, 0xfd,
	0x24, 0x70, 0x74, 0xd3, 0x73, 0x79, 0x60, 0xfc, 0x5b, 0xcf, 0x95, 0xc6, 0x16, 0x19, 0xec, 0x54,
	0x5a, 0x40, 0x9f, 0xc1, 0xfc, 0xb6, 0xae, 0x1e, 0xb8, 0x75, 0x2a, 0x62, 0x0e, 0xa1, 0x12, 0xe7,
	0xad, 0x32, 0x42, 0x97, 0x6c, 0xc0, 0x34, 0x86, 0xc5, 0x4d, 0x5f, 0xb6, 0xba, 0x6f, 0x8c, 0xc8,
	0x15, 0xf3, 0x10, 0x6f, 0x63, 0xbc, 0x11, 0xda, 0x0b, 0x74, 0x28, 0xfd, 0x4e, 0xe0, 0xd8, 0x15,
	0xa3, 0x3a, 0xd1, 0x2a, 0x8e, 0x8e, 0x5f, 0x48, 0xe9, 0x1d, 0xbf, 0x90, 0x92, 0xee, 0x60, 0xc1,
	0xb8, 0xea, 0x6b, 0xed, 0x9b, 0x76, 0x3a, 0x0a, 0xf3, 0xb9, 0x7d, 0xad, 0x99, 0xff, 0x8a, 0xbe,
	0xfe, 0xab, 0x44, 0xcc, 0x78, 0x32, 0x66, 0xb8, 0xc8, 0x58, 0x75, 0xfa, 0x83, 0xc0, 0x7a, 0x72,
	0x0f, 0xcd, 0xfc, 0x42, 0x98, 0x22, 0xd6, 0x67, 0x27, 0x63, 0xb2, 0xe5, 0x99, 0x5f, 0x98, 0x23,
	0x20, 0x57, 0x6e, 0x10, 0xc8, 0x15, 0xda, 0x8f, 0x4b, 0xe0, 0xdf, 0x9c, 0xd8, 0x8f, 0x34, 0xb3,
	0x41, 0xf4, 0xe8, 0xfc, 0x6b, 0xd9, 0x3e, 0xf2, 0xcf, 0xc6, 0xa3, 0x25, 0xf3, 0x30, 0xfd, 0x4d,
	0xe0, 0xb8, 0x68, 0x3a, 0x21, 0xb5, 0xef, 0xcc, 0x06, 0x82, 0x7d, 0xee, 0xac, 0x08, 0xf6, 0x39,
	0x76, 0xea, 0x52, 0x96, 0x8d, 0x1d, 0xbe, 0x15, 0xb3, 0x00, 0x59, 0xd3, 0x1b, 0xd3, 0x8e, 0x88,
	0x59, 0x60, 0xa6, 0xca, 0xed, 0x92, 0x8a, 0x23, 0xd3, 0xc2, 0x91, 0xc0, 0xa9, 0x1a, 0x96, 0x49,
	0xc5, 0x33, 0x13, 0x9e, 0x30, 0x18, 0x1f, 0xd6, 0x49, 0xc5, 0xf3, 0x24, 0xcc, 0x42, 0x36, 0x61,
	0xee, 0xe7, 0xe6, 0x2f, 0xf2, 0xe6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x70, 0x4a, 0x73,
	0x5e, 0x04, 0x00, 0x00,
}
